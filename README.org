#+TITLE: Walheimat's Emacs Config
#+AUTHOR: [[https://gitlab.com/Walheimat][@Walheimat]]

[[./assets/logo.png]]

* About

This project is my personal literate Emacs 29[fn:1] configuration.

If you're a complete beginner, you will find [[https://github.com/emacs-tw/awesome-emacs#starter-kit][more user-friendly and
less tailor-made configs]] out there.

Feel free to consider it a jumping-off-point for your own custom
config. Just know that nothing in this config should be considered
/good practice/, it's mostly just how I (think I) like things to be.

** Installation

If you're interested in trying out Emacs using my config, here are the
necessary steps:

+ install Emacs[fn:2] if you haven't
+ =git clone= this repository
+ =make= which will tangle the libraries, setup[fn:3] your =user-init-file=
  and install all[fn:4] packages

** Customization

Use =wal-customize-group= or add your customization manually to your
=custom-file=.

** Peculiarities

*** As a Daemon

This config is /daemon-ready/, i.e. if you start Emacs with the =--daemon=
flag, the config will make sure that any customization that requires a
frame will only be loaded once a frame was created.

You can install either a =systemd= service[fn:5] or just execute =emacs
--daemon= in a terminal (or your login shell's configuration).

In any case, an Emacs daemon will start. To connect, you can use, for
example, =emacsclient -cn=.

*** Package-Like

#+BEGIN_HTML
<a href='https://coveralls.io/github/Walheimat/wal-emacs?branch=trunk'>
    <img
        src='https://coveralls.io/repos/github/Walheimat/wal-emacs/badge.svg?branch=trunk'
        alt='Coverage Status'
    />
</a>
#+END_HTML

Custom functions and variables use the =wal-= scope[fn:6] and belong to
their respective [[file:lib][library]]'s package. Many libraries define a group for
customization purposes.

With a few exceptions, each library has a *Header* and a *Footer* that
contains declarations for its package, as well as either a *Packages*
section or several sections grouping packages.

* Libraries

The configuration is subdivided into several libraries/packages.
The order of evaluation of the libraries is determined by =wal-packages=
that is defined in the [[file:wal-prelude.el][prelude]] package.

The library consists of:

- general [[file:lib/wal-settings.org][settings]]
- [[file:lib/wal-useful.org][useful]] functions, commands and macros
- setting up [[file:lib/wal-package.org][packages]]
- [[file:lib/wal-key-bindings.org][key bindings]]
- a [[file:lib/wal-bridge.org][bridge]] to my own packages
- configuring [[file:lib/wal-emacs.org][Emacs]], [[file:lib/wal-dired.org][Dired]] and [[file:lib/wal-org.org][Org]]
- [[file:lib/wal-visuals.org][visuals]]
- [[file:lib/wal-complete.org][completion]]
- [[file:lib/wal-language.org][programming languages]], [[file:lib/wal-lsp.org][lsp]] and [[file:lib/wal-vc.org][version control]]
- [[file:lib/wal-devops.org][DevOps]]
- [[file:lib/wal-edit.org][editing]], [[file:lib/wal-find.org][finding]] and [[file:lib/wal-fix.org][fixing]] things
- [[file:lib/wal-movement.org][movement]]
- [[file:lib/wal-workspace.org][project]] and [[file:lib/wal-windows.org][window]] management
- [[file:lib/wal-terminal.org][terminal]]
- the [[file:lib/wal-web.org][Internet]]
- editing [[file:lib/wal-config.org][this config]]

* Footnotes

[fn:1] There's no guarantee anything below works although some effort is
made that it may with a few tweaks. VC packages require 29 since they
depend on =package-vc-install=. These are mainly my own packages
=harpoon=, =partial-recall= and =wal-line= which you can also install
following the instructions there.

[fn:2] If you're feeling adventurous, [[https://git.savannah.gnu.org/cgit/emacs.git/tree/INSTALL][build from source]].

[fn:3] If your =user-init-file= is not =~/.emacs.d/init.el= you need to run
=make EMACS_INIT_FILE=<path_to_your_init> install=.

[fn:4] Packages that belong to an expansion pack (mainly
language-specific packages) or its extras need to be installed
manually by calling =wal-install-expansion-pack=.

You can also force installation of all base packages manually by
running Emacs with custom flag =--ensure=.

[fn:5] Also confer the [[info:emacs#Emacs Server][manual]].

[fn:6] There are some exceptions, like the =general= definers for leader
keys.
