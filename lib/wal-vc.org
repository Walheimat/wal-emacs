#+TITLE: Version Control
#+AUTHOR: @Walheimat
#+PROPERTY: header-args:emacs-lisp :tangle (wal-tangle-target)
#+TAGS: { package : builtin(b) melpa(m) gnu(e) nongnu(n) git(g) }

I'm becoming an old git. If you can no longer reconstruct history, use
version control!

* Header
:PROPERTIES:
:VISIBILITY: folded
:END:

#+BEGIN_SRC emacs-lisp
;;; wal-vc.el --- Version control. -*- lexical-binding: t -*-

;;; Commentary:
;;
;; Provide version control packages.

;;; Code:

(eval-when-compile
  (require 'wal-useful nil t)
  (require 'wal-key-bindings nil t)
  (require 'wal-bridge nil t))

(declare-function magit-clone "ext:magit.el")
(declare-function wal-message-in-a-bottle "wal-useful.el")
#+END_SRC

* Magit

Forget remembering =git= commands, use =transient=.

#+BEGIN_SRC emacs-lisp
(junk-expand magit
  "Support pull requests and code reviews."
  :packages (forge code-review))
#+END_SRC

** magit                                                             :nongnu:
:PROPERTIES:
:UNNUMBERED: t
:END:

Adds a =transient= with commands that make sense outside of a status
buffer.

#+BEGIN_SRC emacs-lisp
(use-package magit
  :wal-ways t

  :config
  (transient-define-prefix ma-magit ()
    "Call `magit' commands in a `magit'-y way."
    [["Core"
      ("m" "status" magit-status)
      ("q" "status (quick)" magit-status-quick)
      ("b" "blame" magit-blame)
      ("p" "process" magit-process-buffer)]
     ["Files"
      ("f" "find" magit-find-file)
      ("o" "find other window" magit-find-file-other-window)]
     ["Diff"
      ("d" "file" magit-diff-buffer-file)
      ("r" "range" magit-diff-range)]
     ["Other"
      ("x" "run" magit-run)
      ("c" "clone" magit-clone)]])

  (wdb-nearby 'magit-process-mode :side 'bottom :height 10)

  :general
  (ambassador "m" 'ma-magit)

  :wal-bind
  ("m" . magit-status)

  :custom
  (magit-blame-mode-lighter " mbl")
  (magit-bury-buffer-function 'magit-restore-window-configuration))
#+END_SRC

* Other

** git-timemachine                                                    :melpa:
:PROPERTIES:
:UNNUMBERED: t
:END:

If you want to go back in time and point fingers at the progenitors of
doom. The toggle command is added to the custom =transient= for
=magit=.

#+BEGIN_SRC emacs-lisp
(use-package git-timemachine
  :config
  (transient-append-suffix 'ma-magit #'magit-clone
    '("t" "time machine" git-timemachine-toggle))

  :defer 2
  :after magit

  :delight " gtm")
#+END_SRC

** git-modes                                                         :nongnu:
:PROPERTIES:
:UNNUMBERED: t
:END:

Add syntax highlighting for ignore files.

#+BEGIN_SRC emacs-lisp
(use-package git-modes
  :mode (("/\\.npmignore\\'" . gitignore-mode)
         ("/\\.dockerignore" . gitignore-mode))

  :init
  (harpoon gitignore-mode
    :messages ("I don't think I know you")))
#+END_SRC

** smerge-mode                                                      :builtin:
:PROPERTIES:
:UNNUMBERED: t
:END:

When resolving conflicts, using =ours= and =theirs= should be easy.
This adds a repeat map for =smerge= commands and sets to the command
prefix to a more ergonomic binding.

#+BEGIN_SRC emacs-lisp
(use-package smerge-mode
  :config
  (defvar-keymap smerge-repeat-map
    :doc "Keymap to repeat various `smerge' commands."
    :repeat t
    "n" 'smerge-next
    "p" 'smerge-prev
    "l" 'smerge-keep-lower
    "u" 'smerge-keep-upper
    "a" 'smerge-keep-all)

  :custom
  (smerge-command-prefix (kbd "C-c g"))

  :delight " smg")
#+END_SRC

** diff-hl                                                              :gnu:
:PROPERTIES:
:UNNUMBERED:
:END:

Show diffs in the fringe (also in =dired= buffers).

#+BEGIN_SRC emacs-lisp
(use-package diff-hl
  :defer 2
  :after magit

  :hook
  ((magit-post-refresh . diff-hl-magit-post-refresh)
   (magit-pre-refresh . diff-hl-magit-pre-refresh)
   (dired-mode . diff-hl-dired-mode))

  :config
  (global-diff-hl-mode)

  :bind
  (:map diff-hl-command-map
   ("*" . nil)
   ("d" . diff-hl-show-hunk))

  :general
  (ambassador :keymaps 'diff-hl-mode-map "d" '(:keymap diff-hl-command-map :wk "diff-hl"))

  :functions (global-diff-hl-mode))
#+END_SRC

* Footer
:PROPERTIES:
:VISIBILITY: folded
:END:

#+BEGIN_SRC emacs-lisp
(provide 'wal-vc)

;;; wal-vc.el ends here
#+END_SRC
