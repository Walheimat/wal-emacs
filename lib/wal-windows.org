#+TITLE: Windows
#+AUTHOR: @Walheimat
#+PROPERTY: header-args:emacs-lisp :tangle (wal-tangle-target)
#+TAGS: { package : builtin(b) melpa(m) gnu(e) nongnu(n) git(g) }

Everything that has to do with windows.

* Header
:PROPERTIES:
:VISIBILITY: folded
:END:

#+BEGIN_SRC emacs-lisp
;;; wal-windows.el --- Windows. -*- lexical-binding: t -*-

;;; Commentary:
;;
;; Provide window packages.

;;; Code:

(eval-when-compile
  (require 'wal-useful nil t)
  (require 'wal-package nil t)
  (require 'wal-key-bindings nil t))

(require 'ring)
(require 'cl-macs)
(require 'subr-x)

(declare-function project-name "ext:project.el")
(declare-function wal-interesting-windows "wal-useful.el")
(declare-function wal-switch-to-other-buffer "wal-useful.el")
#+END_SRC

* Packages

** windmove                                                         :builtin:
:PROPERTIES:
:UNNUMBERED: t
:END:

Start in =windmove-mode=. Allows moving to, swapping, deleting and
pre-selecting the display of windows.

#+begin_src emacs-lisp
(use-package windmove
  :hook (emacs-startup . windmove-mode)

  :custom
  (windmove-default-keybindings (cons nil '(hyper)))
  (windmove-swap-states-default-keybindings (cons nil '(hyper shift)))
  (windmove-delete-default-keybindings (cons 'none '(hyper meta)))
  (windmove-display-default-keybindings (cons nil '(hyper control))))
#+end_src

** winner                                                           :builtin:
:PROPERTIES:
:UNNUMBERED: t
:END:

Start in =winner-mode=, allowing =C-c <left/right>= to undo/redo
changes to the window configuration.

We add a regular expression for commands we configured =vertico= to
use a buffer for.

#+BEGIN_SRC emacs-lisp
(use-package winner
  :custom
  (winner-boring-buffers-regexp "\\*\\(Go to\\|Ripgrep\\).*")

  :hook (emacs-startup . winner-mode))
#+END_SRC

** tab-bar                                                          :builtin:
:PROPERTIES:
:UNNUMBERED: t
:END:

Start in =tab-bar-mode= but hide the tab bar itself. New tabs will
show the =dashboard= buffer on creation. This config uses tabs only
for workspace management powered by [[file:wal-bridge.org::*partial-recall][partial-recall]].

#+begin_src emacs-lisp
(use-package tab-bar
  :hook ((emacs-startup . tab-bar-mode))

  :custom
  (tab-bar-show nil)

  (tab-bar-new-tab-choice #'wal-dashboard-get-buffer)
  (tab-bar-new-tab-group nil)

  :wal-bind
  ("o" . tab-switch)
  ("M-o" . tab-rename))
#+end_src

* Footer
:PROPERTIES:
:VISIBILITY: folded
:END:

#+BEGIN_SRC emacs-lisp
(provide 'wal-windows)

;;; wal-windows.el ends here
#+END_SRC
