#+TITLE: Emacs
#+AUTHOR: @Walheimat
#+PROPERTY: header-args:emacs-lisp :tangle (wal-tangle-target)
#+TAGS: { package : builtin(b) melpa(m) gnu(e) nongnu(n) git(g) }
#+TAGS: { usage : negligible(i) low(l) medium(u) high(h) }

Everything that has to do with Emacs internal functioning and systems.

* Header
:PROPERTIES:
:VISIBILITY: folded
:END:

#+BEGIN_SRC emacs-lisp
;;; wal-emacs.el --- Emacs. -*- lexical-binding: t -*-

;;; Commentary:
;;
;; Provide Emacs settings/configurations.

;;; Code:

(eval-when-compile
  (require 'wal-useful nil t)
  (require 'wal-key-bindings nil t)
  (require 'wal-bridge nil t))

(declare-function wdb-faraway "wal-useful.el")

(wal-on-boot emacs
  (wdb-faraway "\\*Messages\\*")
  (wdb-faraway 'help-mode)
  (wdb-faraway 'shortdoc-mode)
  (wdb-faraway 'debug-mode))
#+END_SRC

* Packages

#+begin_src emacs-lisp
(junk-expand emacs
  "Let's keep it in Emacs."
  :extras (pdf-tools))
#+end_src

** async                                                            :gnu:low:
:PROPERTIES:
:UNNUMBERED: t
:END:

Execute IO actions asynchronously. This is mainly for moving files in Dired.

#+BEGIN_SRC emacs-lisp
(use-package async
  :defer 2
  :after dired

  :config
  (dired-async-mode 1)

  :functions (dired-async-mode))
#+END_SRC

** helpful                                                       :melpa:high:
:PROPERTIES:
:UNNUMBERED: t
:END:

Let's try to be even more =helpful=. This provides alternate version of various =describe= commands to provide more information.

#+BEGIN_SRC emacs-lisp
(use-package helpful
  :wal-ways t

  :config
  (wdb-faraway 'helpful-mode)

  :custom
  (helpful-max-buffers 3)

  :bind
  (([remap describe-command] . helpful-command)
   ([remap describe-function] . helpful-function)
   ([remap describe-key] . helpful-key)
   ([remap describe-variable] . helpful-variable)
   ([remap describe-symbol] . helpful-symbol)

   :map help-map
   ("M" . helpful-macro)
   ("C-x" . helpful-kill-buffers)

   :map helpful-mode-map
   ("k" . kill-buffer-and-window))

  :defines (helpful-mode-map))
#+END_SRC

* Footer
:PROPERTIES:
:VISIBILITY: folded
:END:

#+BEGIN_SRC emacs-lisp
(provide 'wal-emacs)

;;; wal-emacs.el ends here
#+END_SRC
